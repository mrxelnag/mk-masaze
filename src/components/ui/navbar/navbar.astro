---
//Import relevant dependencies
import NavLink from "~/components/ui/navbar/nav-link.astro";
import BrandLogo from "~/components/ui/navbar/brand-logo.astro";
import { getPermalink } from "~/utils/permalinks";
import { SITE } from "jpconfig:config";
---

<!-- Main header component -->
<header class="sticky inset-x-0 top-4 z-50 flex w-full flex-wrap text-sm md:flex-nowrap md:justify-start max-w-7xl px-4 sm:px-6 lg:px-8 mx-auto">
  <!-- Navigation container -->
  <nav
    class="relative mx-2 w-full rounded-[36px] border border-primary/40 bg-white/90 px-4 py-3 backdrop-blur-md md:flex md:items-center md:justify-between md:px-6 md:py-2 lg:px-8 xl:mx-auto"
    aria-label="Global"
  >
    <div class="flex items-center justify-between">
      <!-- Brand logo -->
      <a
        class="flex-none rounded-lg text-xl font-bold outline-hidden ring-zinc-500 focus-visible:ring-3"
        href={getPermalink("/", "home")}
        aria-label="Brand"
      >
        <BrandLogo class="h-auto w-24" />
      </a>
      <!-- Collapse toggle for smaller screens -->
      <div class="ml-auto mr-5 md:hidden">
        <button
          type="button"
          id="mobile-menu-toggle"
          class="flex h-8 w-8 items-center justify-center rounded-full text-sm font-bold text-neutral-600 transition duration-300 hover:bg-neutral-200 disabled:pointer-events-none disabled:opacity-50"
          aria-controls="navbar-collapse-with-animation"
          aria-label="Toggle navigation"
          aria-expanded="false"
        >
          <svg
            id="menu-open-icon"
            class="h-[1.25rem] w-[1.25rem] shrink-0 transition-transform duration-300"
            width="24"
            height="24"
            viewBox="0 0 24 24"
            fill="none"
            stroke="currentColor"
            stroke-width="2"
            stroke-linecap="round"
            stroke-linejoin="round"
          >
            <line x1="3" x2="21" y1="6" y2="6"></line>
            <line x1="3" x2="21" y1="12" y2="12"></line>
            <line x1="3" x2="21" y1="18" y2="18"></line>
          </svg>
          <svg
            id="menu-close-icon"
            class="hidden h-[1.25rem] w-[1.25rem] shrink-0 transition-transform duration-300"
            width="24"
            height="24"
            viewBox="0 0 24 24"
            fill="none"
            stroke="currentColor"
            stroke-width="2"
            stroke-linecap="round"
            stroke-linejoin="round"
          >
            <path d="M18 6 6 18"></path>
            <path d="m6 6 12 12"></path>
          </svg>
        </button>
      </div>
    </div>
    <!-- Contains navigation links -->
    <div
      id="navbar-collapse-with-animation"
      class="grow basis-full overflow-hidden transition-all duration-500 ease-in-out md:block md:opacity-100 md:max-h-none"
      style="max-height: 0; opacity: 0;"
    >
      <!-- Navigation links container -->
      <div
        class="mt-5 flex flex-col gap-x-0 gap-y-4 md:mt-0 md:flex-row md:items-center md:justify-end md:gap-x-4 lg:gap-x-7 md:gap-y-0 md:ps-7"
      >
        <NavLink url={getPermalink("/", "home")} name="Domů" />
        <NavLink url={getPermalink("/masaze-kosmetika")} name="Masáže" />
        <NavLink url={getPermalink("/masaze-kosmetika#kosmetika")} name="Kosmetika" />
        <NavLink url={getPermalink("/#kontakt")} name="Kontakt" />
        <a class="group inline-flex max-w-24 items-center gap-x-2 py-2 px-3 bg-primary font-medium text-sm text-primary-foreground rounded-tl-xl rounded-br-xl focus:outline-hidden" href={SITE.reservation}>
          Rezervace
        </a>
      </div>
    </div>
  </nav>
</header>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const toggleButton = document.getElementById('mobile-menu-toggle');
    const mobileMenu = document.getElementById('navbar-collapse-with-animation');
    const openIcon = document.getElementById('menu-open-icon');
    const closeIcon = document.getElementById('menu-close-icon');

    if (toggleButton && mobileMenu && openIcon && closeIcon) {
      // Set initial state for mobile
      function setInitialState() {
        if (window.innerWidth < 768) {
          mobileMenu.style.maxHeight = '0';
          mobileMenu.style.opacity = '0';
        } else {
          mobileMenu.style.maxHeight = 'none';
          mobileMenu.style.opacity = '1';
        }
      }

      setInitialState();

      toggleButton.addEventListener('click', function() {
        const isExpanded = toggleButton.getAttribute('aria-expanded') === 'true';

        if (isExpanded) {
          // Close menu - slide up
          mobileMenu.style.maxHeight = '0';
          mobileMenu.style.opacity = '0';
          openIcon.classList.remove('hidden');
          closeIcon.classList.add('hidden');
          toggleButton.setAttribute('aria-expanded', 'false');
        } else {
          // Open menu - slide down
          mobileMenu.style.maxHeight = mobileMenu.scrollHeight + 'px';
          mobileMenu.style.opacity = '1';
          openIcon.classList.add('hidden');
          closeIcon.classList.remove('hidden');
          toggleButton.setAttribute('aria-expanded', 'true');
        }
      });

      // Close menu when clicking on navigation links (mobile only)
      const navLinks = mobileMenu.querySelectorAll('a');
      navLinks.forEach(link => {
        link.addEventListener('click', function() {
          if (window.innerWidth < 768) { // Only on mobile
            mobileMenu.style.maxHeight = '0';
            mobileMenu.style.opacity = '0';
            openIcon.classList.remove('hidden');
            closeIcon.classList.add('hidden');
            toggleButton.setAttribute('aria-expanded', 'false');
          }
        });
      });

      // Handle window resize
      window.addEventListener('resize', function() {
        if (window.innerWidth >= 768) {
          // Desktop: reset inline styles
          mobileMenu.style.maxHeight = 'none';
          mobileMenu.style.opacity = '1';
          openIcon.classList.remove('hidden');
          closeIcon.classList.add('hidden');
          toggleButton.setAttribute('aria-expanded', 'false');
        } else {
          // Mobile: close menu if it was open
          const isExpanded = toggleButton.getAttribute('aria-expanded') === 'true';
          if (!isExpanded) {
            mobileMenu.style.maxHeight = '0';
            mobileMenu.style.opacity = '0';
          }
        }
      });
    }
  });
</script>